{"version":3,"sources":["containers/Common/LazyImage/index.js","assets/images/pp_with_linus.jpg","assets/images/certifications sync /^/.//.*$","assets/images/certifications/CCP.png","assets/images/certifications/CDVA.png","assets/images/certifications/CSAA.png","assets/images/certifications/CSOA.png","containers/DashboardV2/index.js","util/index.js","containers/Common/Profile/index.js","containers/Common/Social/index.js","containers/About/index.js","containers/Common/Company/index.js","containers/Common/Work/index.js","containers/Common/Certifications/index.js","containers/Common/Institution/index.js","containers/Common/Education/index.js","containers/Resume/index.js","containers/Common/WorldMap/index.js","containers/Common/Fallback/index.jsx","containers/Common/Books/index.js","containers/Interests/index.js","containers/Contact/index.js","containers/Common/Footer/index.js","containers/App/index.js","registerServiceWorker.js","index.js","containers/App/URLs.js"],"names":["style","backgroundColor","cursor","overflow","position","imgStyle","transition","LazyImage","index","onClick","photo","margin","direction","top","left","width","Math","floor","height","className","e","alt","module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","Dashboard","props","state","name","this","Fragment","options","max","scale","class","Component","getSocialIconClass","social","toLowerCase","Profile","data","network","url","href","title","Social","profile","idx","key","About","summary","profiles","email","phone","glyph","element","cv","src","ProfilePicture","circle","Company","date","split","company","startDate","endDate","website","iconStyle","display","Work","companies","i","Certifications","groups","myArray","chunkSize","cloneArray","slice","results","length","push","splice","chunkArray","certifications","group","marginBottom","cert","target","rel","require","image","Institution","institution","studyType","area","getYear","Education","institutions","inst","Resume","education","work","Travel","countries","spanStyle","opacity","setState","country","indexOf","projectionConfig","rotation","yOffset","geography","worldMap","geographies","projection","handleClick","onMouseEnter","properties","NAME","onMouseOver","event","clientX","window","screen","availWidth","clientY","onMouseOut","default","fill","getFillColor","stroke","strokeWidth","outline","hover","getHoverColor","pressed","FallBack","BookShelf","lazy","Book","modalIsOpen","selectedModal","shelves","outerWidth","outerHeight","openModal","bind","afterOpenModal","closeModal","updateDimensions","getColumnCount","addEventListener","removeEventListener","rootElement","document","getElementById","filter","photos","favoriteBooks","book","image_url","replace","obj","console","log","open","link","columns","ImageComponent","isOpen","onAfterOpen","onRequestClose","overlayClassName","contentLabel","getModalContent","context","fallback","Fallback","books","readBooks","Interests","travel","Books","countriesVisited","WorldMap","Contact","handleUserInput","getValidationState","validateInputs","sendEmail","myEmail","message","nameValidation","emailValidation","messageValidation","isLoading","validaton","update","value","isEmpty","isEmail","prev","payload","from","to","subject","text","fetch","method","body","JSON","stringify","headers","then","response","status","json","alert","catch","validations","horizontal","controlId","validationState","type","placeholder","onChange","componentClass","rows","disabled","Footer","quote","author","App","resumeData","ReactGA","initialize","testMode","process","pageview","location","pathname","search","quotesAPI","booksAPI","getQuote","err","basics","interests","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.577d8e13.chunk.js","sourcesContent":["import React from 'react'\nimport LazyLoad from 'react-lazyload'\n\nimport './styles.css'\n\nconst separation = 0.1\n\nconst style = {\n  backgroundColor: '#eee',\n  cursor: 'pointer',\n  overflow: 'hidden',\n  position: 'relative'\n}\n\nconst imgStyle = {\n  transition: 'transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s'\n}\n\nconst LazyImage = ({\n  index,\n  onClick,\n  photo,\n  margin,\n  direction,\n  top,\n  left\n}) => {\n  if (direction === 'column') {\n    style.position = 'absolute'\n    style.left = left\n    style.top = top\n  }\n  const width = Math.floor((1 - separation) * photo.width)\n  const height = Math.floor((1 - separation) * photo.height)\n  return (\n    <div\n      style={{ margin, height, width, ...style }}\n      className='lazy-image'\n    >\n      <LazyLoad>\n        <img\n          style={\n            {\n              ...imgStyle,\n              height,\n              width\n            }\n          }\n          {...photo}\n          onClick={e => onClick(e, { index, photo })}\n          alt={photo.alt}\n        />\n      </LazyLoad>\n    </div>\n  )\n}\n\nexport default LazyImage\n","module.exports = __webpack_public_path__ + \"static/media/pp_with_linus.8a53edbd.jpg\";","var map = {\n\t\"./CCP.png\": 202,\n\t\"./CDVA.png\": 203,\n\t\"./CSAA.png\": 204,\n\t\"./CSOA.png\": 205\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 201;","module.exports = __webpack_public_path__ + \"static/media/CCP.8028854c.png\";","module.exports = __webpack_public_path__ + \"static/media/CDVA.8bc681b8.png\";","module.exports = __webpack_public_path__ + \"static/media/CSAA.216915c4.png\";","module.exports = __webpack_public_path__ + \"static/media/CSOA.e67d6457.png\";","import React, { Component } from 'react'\nimport Tilt from 'react-tilt'\n// import Particles from 'react-particles-js'\nimport PropTypes from 'prop-types'\nimport './styles.css'\n// import particlesConfig from '../../assets/particlesjs-config.json'\n\nclass Dashboard extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      name: props.name\n    }\n  }\n\n  render () {\n    const { name } = this.state\n    return (\n      <React.Fragment>\n        <section id='home' className='large-header' >\n          {/* <Particles\n            params={particlesConfig}\n          /> */}\n          <div className='overlay'>\n            <Tilt\n              options={{\n                max: 25,\n                scale: 1.1\n              }}\n            >\n              <div className='main-title'>\n                <p><i>Hi, My Name is</i></p>\n                <div style={{'display': 'inline-block'}}>\n                  <h1 className='typewriter'>{name}</h1>\n                </div>\n                <br />\n                <br />\n                {/* <div className='content'>\n                  <p><b>{ `${name || ''}` }</b></p>\n                </div> */}\n              </div>\n            </Tilt>\n            <p className='arrow-container'>\n              <i class='arrow down' />\n            </p>\n          </div>\n        </section>\n      </React.Fragment>\n    )\n  }\n}\n\nDashboard.propTypes = {\n  name: PropTypes.string.isRequired\n}\n\nexport default Dashboard\n","\nconst getSocialIcon = social => {\n  // TODO: Add other social icons aswell\n  switch (social.toLowerCase()) {\n    case 'github':\n      return 'Q'\n    case 'twitter':\n      return 'a'\n    case 'instagram':\n      return 'x'\n    case 'linkedin':\n      return 'j'\n    default:\n      return '-'\n  }\n}\n\nconst getSocialIconClass = social => {\n  // TODO: Add other social icons aswell\n  switch (social.toLowerCase()) {\n    case 'github':\n      return 'socicon-github'\n    case 'twitter':\n      return 'socicon-twitter'\n    case 'instagram':\n      return 'socicon-instagram'\n    case 'linkedin':\n      return 'socicon-linkedin'\n    case 'medium':\n      return 'socicon-medium'\n    case 'whatsapp':\n      return 'socicon-whatsapp'\n    default:\n      return '-'\n  }\n}\n\nexport { getSocialIcon, getSocialIconClass }\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { getSocialIconClass } from '../../../util'\nimport './styles.css'\nimport './socicon.css'\n\nclass Profile extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      data: props.data\n    }\n  }\n\n  render () {\n    const {network, url} = this.state.data\n    return (\n      <div className='ico'>\n        <a className='no-underline' href={url}>\n          {/* <span className='saucisson'>{getSocialIcon(network)}</span> */}\n          <span className={getSocialIconClass(network)} title={network}/>\n        </a>\n      </div>\n    )\n  }\n}\n\nProfile.propTypes = {\n  data: PropTypes.object.isRequired\n}\n\nexport default Profile\n","import React, { Component } from 'react'\nimport Profile from '../Profile'\nimport PropTypes from 'prop-types'\n\nclass Social extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      data: props.data\n    }\n  }\n\n  render () {\n    const profiles = this.state.data\n    return (\n      profiles.map((profile, idx) => <Profile data={profile} key={idx} />)\n    )\n  }\n}\n\nSocial.propTypes = {\n  data: PropTypes.array.isRequired\n}\n\nexport default Social\n","import React, { Component } from 'react'\nimport LazyLoad from 'react-lazyload'\nimport Image from 'react-bootstrap/lib/Image'\nimport Tilt from 'react-tilt'\nimport PropTypes from 'prop-types'\nimport Glyphicon from 'react-bootstrap/lib/Glyphicon'\nimport './styles.css'\nimport ProfilePicture from '../../assets/images/pp_with_linus.jpg'\nimport Social from '../Common/Social'\n\nclass About extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      data: props.data\n    }\n  }\n\n  render () {\n    const {name, summary, profiles, email, phone} = this.state.data\n    return (\n      <React.Fragment>\n        <section className='row about' id='about'>\n          <div className='col-md-12 title'>\n            <h2>\n              <Glyphicon glyph='user' /> / About me\n            </h2>\n          </div>\n          <div className='col-md-12'>\n            <div className='content'>\n              <div className='about-holder'>\n                <div className='inner-title'>\n                  {/* <h3>Hi</h3>\n                  <h3>my name is </h3>\n                  <h2>{name}</h2> */}\n                  <br />\n                  {\n                    summary.map((element, idx) => {\n                      if (element === '') {\n                        return <br key={idx} />\n                      }\n                      return <p key={idx}> {element} </p>\n                    })\n                  }\n                </div>\n                <div className='inner-content profile'>\n                  <div className='dl-btn'>\n                    <Social data={profiles.cv} />\n                    <p>See / Download My CV</p>\n                  </div>\n                  <div className='img-profile'>\n                    <Tilt\n                      options={{\n                        max: 25,\n                        scale: 1.15\n                      }}\n                    >\n                      <LazyLoad>\n                        <Image src={ProfilePicture} alt={name} circle />\n                      </LazyLoad>\n                    </Tilt>\n                  </div>\n                  <div className='fol-btn'>\n                    <Social data={profiles.social} />\n                    <p>Follow Me On</p>\n                  </div>\n                </div>\n                <div className='info'>\n                  <ul>\n                    <li>\n                      <div className='ico'>\n                        <a href={`mailto:${email}`}>\n                          <i className='glyphicon glyphicon-envelope' />\n                        </a>\n                      </div>\n                      <p><a href={`mailto:${email}`}>{email}</a></p>\n                    </li>\n                    <li>\n                      <div className='ico'>\n                        <a href={`tel:${phone}`}>\n                          <i className='glyphicon glyphicon-earphone' />\n                        </a>\n                      </div>\n                      <p><a href={`tel:${phone}`}>{phone}</a></p>\n                    </li>\n                    <li>\n                      <div className='ico'>\n                        <a href={`https://wa.me/${phone}`}>\n                          <span className='socicon-whatsapp' />\n                        </a>\n                      </div>\n                      <p>\n                        <a href={`https://wa.me/${phone}`} >WhatsApp</a>\n                      </p>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </React.Fragment>\n    )\n  }\n}\n\nAbout.propTypes = {\n  data: PropTypes.object.isRequired\n}\n\nexport default About\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Glyphicon from 'react-bootstrap/lib/Glyphicon'\nimport { VerticalTimelineElement } from 'react-vertical-timeline-component'\nimport './styles.css'\nclass Company extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      data: props.data\n    }\n  }\n\n  getYear (date) {\n    return date.split('-')[0]\n  }\n\n  render () {\n    const {company, startDate, endDate, position, summary, website} = this.state.data\n    return (\n      <VerticalTimelineElement iconStyle={{display: 'none'}}>\n        <div className='work-item'>\n          <div className='work-ico'>\n            <Glyphicon glyph='briefcase' />\n          </div>\n          <div className='work-desc'>\n            <h4>\n              <a href={website} className='no-underline' >{company}</a>\n            </h4>\n            <h5>{position}</h5>\n            <h6>{startDate} - {endDate}</h6>\n            <p>{summary}</p>\n          </div>\n        </div>\n      </VerticalTimelineElement>\n    )\n  }\n}\n\nCompany.propTypes = {\n  data: PropTypes.object.isRequired\n}\n\nexport default Company\n","import React, { Component } from 'react'\nimport { VerticalTimeline } from 'react-vertical-timeline-component'\nimport 'react-vertical-timeline-component/style.min.css'\nimport Company from '../Company'\nimport PropTypes from 'prop-types'\n\nclass Work extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      companies: props.companies\n    }\n  }\n\n  render () {\n    const { companies } = this.state\n    return (\n      <div>\n        <div className='inner-title'>\n          <h3>My Experiences</h3>\n          <p>What I did in the past and what I am doing now.</p>\n        </div>\n        <div className='inner-content'>\n          <VerticalTimeline>\n            {\n              companies.map((company, i) => <Company data={company} key={i} />)\n            }\n          </VerticalTimeline>\n        </div>\n      </div>\n    )\n  }\n}\n\nWork.propTypes = {\n  companies: PropTypes.array.isRequired\n}\n\nexport default Work\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport './styles.css'\n\n/**\n * Returns an array with arrays of the given size.\n *\n * @param myArray {Array} Array to split\n * @param chunkSize {Integer} Size of every group\n */\nconst chunkArray = (myArray, chunkSize) => {\n  const cloneArray = myArray.slice()\n  const results = []\n\n  while (cloneArray.length) {\n    results.push(cloneArray.splice(0, chunkSize))\n  }\n  return results\n}\n\nconst Certifications = (props) => {\n  const { certifications } = props\n  const groups = chunkArray(certifications, 3)\n  return (\n    <div>\n      <div className='inner-title'>\n        <h3>Certifications</h3>\n        <p>Officially certified in</p>\n      </div>\n      <div className='inner-content certifications'>\n        {\n          groups.map((group, idx) => {\n            return (\n              <div className='row' key={idx} style={{ marginBottom: 0 }} >\n                {group.map((cert, i) => {\n                  return (\n                    <div className={`col-md-${12 / group.length} certification`}>\n                      <a href={cert.url} target='_blank' rel='noopener noreferrer' >\n                        <img\n                          src={require(`../../../assets/images/certifications/${cert.image}`)}\n                          alt={cert.title}\n                        />\n                      </a>\n                    </div>\n                  )\n                })}\n              </div>\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nCertifications.propTypes = {\n  certifications: PropTypes.array.isRequired\n}\n\nexport default Certifications\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Glyphicon from 'react-bootstrap/lib/Glyphicon'\n\nclass Institution extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      data: props.data\n    }\n  }\n\n  getYear (date) {\n    return date.split('-')[0]\n  }\n\n  render () {\n    const {institution, startDate, endDate, studyType, area} = this.state.data\n    return (\n      <div className='col-md-6'>\n        <div className='work-item'>\n          <Glyphicon glyph='education' />\n          <div className='work-desc'>\n            <h4>\n              {institution}\n            </h4>\n            <h6>{this.getYear(startDate)} - {this.getYear(endDate)}</h6>\n            <p>\n              {studyType} : {area}\n            </p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nInstitution.propTypes = {\n  data: PropTypes.object.isRequired\n  // startDate: PropTypes.string.isRequired,\n  // endDate: PropTypes.string.isRequired,\n  // studyType: PropTypes.string.isRequired,\n  // area: PropTypes.string.isRequired\n}\n\nexport default Institution\n","import React, { Component } from 'react'\nimport Institution from '../Institution'\nimport PropTypes from 'prop-types'\n\nclass Education extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      institutions: props.institutions\n    }\n  }\n\n  /**\n   * Returns an array with arrays of the given size.\n   *\n   * @param myArray {Array} Array to split\n   * @param chunkSize {Integer} Size of every group\n   */\n  chunkArray (myArray, chunkSize) {\n    const cloneArray = myArray.slice()\n    const results = []\n\n    while (cloneArray.length) {\n      results.push(cloneArray.splice(0, chunkSize))\n    }\n    return results\n  }\n\n  render () {\n    const { institutions } = this.state\n    const groups = this.chunkArray(institutions, 2)\n    return (\n      <div>\n        <div className='inner-title'>\n          <h3>My Education</h3>\n          <p>\n              The studies which partially made the developer that I am\n              now.\n          </p>\n        </div>\n        <div className='inner-content'>\n          {\n            groups.map((group, idx) => {\n              return (\n                <div className='row' key={idx} >\n                  {group.map((inst, i) => <Institution data={inst} key={i} />)}\n                </div>\n              )\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nEducation.propTypes = {\n  institutions: PropTypes.array.isRequired\n}\n\nexport default Education\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Work from '../Common/Work'\n\nimport Certifications from '../Common/Certifications'\nimport Glyphicon from 'react-bootstrap/lib/Glyphicon'\nimport Education from '../Common/Education'\nimport './styles.css'\n\nclass Resume extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      education: props.education,\n      work: props.work\n    }\n  }\n  render () {\n    const { education, work, certifications } = this.props\n    return (\n      <React.Fragment>\n        <section className='row resume' id='resume'>\n          <div className='col-md-12 title'>\n            <h2>\n              <Glyphicon glyph='briefcase' /> / Resume\n            </h2>\n          </div>\n          <div className='col-md-12'>\n            <div className='content'>\n              <Certifications certifications={certifications} />\n              <div className='divider'>\n                <span>\n                  <i className='glyphicon glyphicon-star' />\n                </span>\n              </div>\n              <Work companies={work} />\n              <div className='divider'>\n                <span>\n                  <i className='glyphicon glyphicon-star' />\n                </span>\n              </div>\n              <Education institutions={education} />\n            </div>\n          </div>\n        </section>\n      </React.Fragment>\n    )\n  }\n}\n\nResume.propTypes = {\n  education: PropTypes.array.isRequired,\n  work: PropTypes.array.isRequired\n}\n\nexport default Resume\n","import React, { Component } from 'react'\nimport {\n  ComposableMap,\n  Geographies,\n  Geography\n} from 'react-simple-maps'\nimport worldMap from '../../../assets/world-50m.json'\nimport './styles.css'\n\nclass Travel extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      countries: props.countries,\n      spanStyle: {\n        opacity: 0\n      }\n    }\n  }\n\n  componentWillReceiveProps (props) {\n    this.setState({countries: props.countries})\n  }\n\n  getFillColor (country, countries) {\n    if (countries.indexOf(country) > -1) {\n      return '#92c14d'\n    }\n    return '#999999'\n  }\n\n  getHoverColor (country, countries) {\n    if (countries.indexOf(country) > -1) {\n      return '#62912d'\n    }\n    return '#263238'\n  }\n\n  render () {\n    const { countries, country, spanStyle } = this.state\n    if (countries && countries.length > 0) {\n      return (\n        <div>\n          <React.Fragment>\n            <ComposableMap\n              projectionConfig={{\n                scale: 220,\n                rotation: [0, 0, 0],\n                yOffset: 70\n              }}\n              width={980}\n              height={551}\n              style={{\n                width: '100%',\n                height: 'auto'\n              }}\n            >\n              <Geographies geography={worldMap} >\n                {(geographies, projection) => geographies.map((geography, i) => (\n                  <Geography\n                    key={i}\n                    geography={geography}\n                    projection={projection}\n                    onClick={this.handleClick}\n                    onMouseEnter={(country) => {\n                      this.setState({\n                        country: country.properties.NAME\n                      })\n                    }}\n                    onMouseOver={(event) => {\n                      this.setState({\n                        spanStyle: {\n                          opacity: 1,\n                          left: event.clientX - ((window.screen.availWidth - 960) / 2),\n                          top: event.clientY\n                        }\n                      })\n                    }}\n                    onMouseOut={(country, event) => {\n                      this.setState({\n                        spanStyle: {\n                          opacity: 0\n                        }\n                      })\n                    }}\n                    style={{\n                      default: {\n                        fill: this.getFillColor(geography.properties.NAME, countries),\n                        stroke: '#607D8B',\n                        strokeWidth: 0.75,\n                        outline: 'none'\n                      },\n                      hover: {\n                        fill: this.getHoverColor(geography.properties.NAME, countries),\n                        stroke: '#607D8B',\n                        strokeWidth: 0.75,\n                        outline: 'none'\n                      },\n                      pressed: {\n                        fill: '#263238',\n                        stroke: '#607D8B',\n                        strokeWidth: 0.75,\n                        outline: 'none'\n                      }\n                    }}\n                  />\n                ))}\n              </Geographies>\n            </ComposableMap>\n          </React.Fragment>\n          <span className='countryTooltip' style={spanStyle}>{country}</span>\n        </div>\n      )\n    }\n    return <div />\n  }\n}\n\nexport default Travel\n","import React from 'react'\n// import { Spin } from 'antd'\n\nimport './style.css'\n\n// const FallBack = () => (\n//   <Spin\n//     className='App'\n//     spinning\n//     delay={1}\n//     size='large'\n//   />\n// )\n\nconst FallBack = () => <div className='suspenseFallback'>Loading...</div>\n\nexport default FallBack\n","import React, { Component, lazy, Suspense } from 'react'\nimport Modal from 'react-modal'\nimport Glyphicon from 'react-bootstrap/lib/Glyphicon'\nimport Gallery from 'react-photo-gallery'\n\nimport Fallback from '../Fallback'\nimport LazyImage from '../LazyImage'\n\nimport favoriteBooks from '../../../data/books/favorites.json'\nimport readBooks from '../../../data/books/read.json'\n\n\nimport './styles.css'\n\nconst BookShelf = lazy(() => import('../BookShelf'))\n// Modal.setAppElement('#root')\n\nclass Book extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      modalIsOpen: false,\n      selectedModal: 0,\n      shelves: [],\n      width: window.outerWidth,\n      height: window.outerHeight\n    }\n    this.openModal = this.openModal.bind(this)\n    this.afterOpenModal = this.afterOpenModal.bind(this)\n    this.closeModal = this.closeModal.bind(this)\n    this.updateDimensions = this.updateDimensions.bind(this)\n    this.getColumnCount = this.getColumnCount.bind(this)\n  }\n\n  componentDidMount () {\n    // open modal for development\n    // this.openModal(2)\n    window.addEventListener('resize', this.updateDimensions)\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('resize', this.updateDimensions)\n  }\n\n  updateDimensions () {\n    this.setState({\n      width: window.outerWidth,\n      height: window.outerHeight\n    })\n  }\n\n  openModal (selectedModal) {\n    this.setState({\n      modalIsOpen: true,\n      selectedModal\n    })\n  }\n\n  afterOpenModal () {\n    const rootElement = document.getElementById('root')\n    if (rootElement) {\n      rootElement.style.filter = 'blur(5px)'\n    }\n  }\n\n  closeModal () {\n    const rootElement = document.getElementById('root')\n    if (rootElement) {\n      rootElement.style.filter = 'blur(0px)'\n    }\n    this.setState({modalIsOpen: false})\n  }\n\n  getColumnCount () {\n    const { width } = this.state\n    // if (width >= 1500) return 7\n    if (width >= 959) return 6\n    if (width >= 768) return 5\n    if (width >= 480) return 4\n    if (width >= 240) return 3\n    return 2\n  }\n\n  render () {\n    const { selectedModal } = this.state\n\n    return (\n      <div>\n        <Gallery\n          photos={favoriteBooks.map((book, idx) => ({\n            ...book,\n            // src: book.image_url.replace(/.(s\\/)/g, str => {\n            //   const tmp = str.split('s/')\n            //   if (tmp[0] < 58) {\n            //     return tmp[0].concat('l/')\n            //   }\n            //   return str\n            // }),\n            src: book.image_url.replace(/_SX98_./g, ''),\n            width: 98,\n            height: 148,\n            alt: book.title,\n            key: idx\n          }))}\n          onClick={\n            (event, obj) => {\n              console.log(obj)\n              window.open(obj.photo.link, '_blank')\n            }\n          }\n          direction='column'\n          columns={this.getColumnCount()}\n          margin={0}\n          ImageComponent={LazyImage}\n        />\n        <div className='bookActions'>\n          <span className='books_link' onClick={() => this.openModal(0)}>\n            <Glyphicon glyph='plus' /> More Books\n          </span>\n          {/* <span className='books_link' onClick={() => this.openModal(1)}> */}\n          <span className='books_link' onClick={() => window.open('https://gre.abhishek.pro.np/user/88517742/viz/rgraph', '_blank')}>\n            <Glyphicon glyph='plus' /> Explore Books\n          </span>\n        </div>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.closeModal}\n          className='booksModal'\n          overlayClassName='ModalOverlay'\n          contentLabel='Books'\n        >\n          <div className='bookModalContent'>\n            { getModalContent(selectedModal, this) }\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst getModalContent = (selectedModal, context) => {\n  if (selectedModal === 0) {\n    return (\n      <Suspense fallback={<Fallback />} >\n        <div className='bookShelf' >\n          <BookShelf\n            books={readBooks}\n            margin={0}\n            columns={context.getColumnCount() + 1}\n          />\n        </div>\n      </Suspense>\n    )\n  }\n}\n\nexport default Book\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Glyphicon from 'react-bootstrap/lib/Glyphicon'\nimport WorldMap from '../Common/WorldMap'\nimport Books from '../Common/Books'\nimport './styles.css'\n\nclass Interests extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      data: props.data\n    }\n  }\n\n  componentWillReceiveProps (props) {\n    this.setState({data: props.data})\n  }\n\n  render () {\n    const { travel } = this.state.data\n    return (\n      <React.Fragment>\n        <section className='row interests' id='interests'>\n          <div className='col-md-12 title'>\n            <h2>\n              <Glyphicon glyph='heart' /> / Interests\n            </h2>\n          </div>\n          <div className='col-md-12'>\n            <div className='content'>\n              <div className='row'>\n                <div className='col-md-12'>\n                  <div className='inner-title'>\n                    <h3><Glyphicon glyph='book' /> Books</h3>\n                    <p>\n                      Some of my favorite books:\n                    </p>\n                  </div>\n                  <Books />\n                </div>\n                <div className='col-md-12'>\n                  <div className='divider'>\n                    <span>\n                      <i class='glyphicon glyphicon-star' />\n                    </span>\n                  </div>\n                </div>\n                <div className='col-md-12'>\n                  <div className='inner-title'>\n                    <h3><Glyphicon glyph='plane' /> Travel</h3>\n                    <p>\n                      Countries visited so far: <i><b>{travel.countriesVisited.length}</b></i>\n                    </p>\n                  </div>\n                  <WorldMap countries={travel.countriesVisited} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </React.Fragment>\n    )\n  }\n}\n\nInterests.propTypes = {\n  data: PropTypes.object.isRequired\n}\n\nexport default Interests\n","import fetch from 'isomorphic-fetch'\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Glyphicon from 'react-bootstrap/lib/Glyphicon'\nimport {Form, FormGroup, FormControl, ControlLabel, Button} from 'react-bootstrap'\nimport isEmail from 'validator/lib/isEmail'\nimport isEmpty from 'validator/lib/isEmpty'\nimport './styles.css'\n\nclass Contact extends Component {\n  constructor (props) {\n    super(props)\n    this.handleUserInput = this.handleUserInput.bind(this)\n    this.getValidationState = this.getValidationState.bind(this)\n    this.validateInputs = this.validateInputs.bind(this)\n    this.sendEmail = this.sendEmail.bind(this)\n    this.state = {\n      myEmail: props.email,\n      name: '',\n      email: '',\n      message: '',\n      nameValidation: null,\n      emailValidation: null,\n      messageValidation: null,\n      isLoading: false\n    }\n  }\n\n  getValidationState () {\n    const length = this.state.name.length\n    if (length > 1) return 'success'\n    else if (length > 5) return 'warning'\n    else if (length > 0) return 'error'\n    return null\n  }\n\n  componentWillReceiveProps (props) {\n    this.setState({ myEmail: props.email })\n  }\n\n  handleUserInput (e) {\n    const validaton = {}\n    const update = {\n      [e.target.name]: e.target.value\n    }\n    switch (e.target.name) {\n      case 'name':\n        if (isEmpty(e.target.value)) {\n          validaton.nameValidation = 'error'\n        } else {\n          validaton.nameValidation = 'success'\n        }\n        break\n      case 'email':\n        if (!isEmail(e.target.value)) {\n          validaton.emailValidation = 'error'\n        } else {\n          validaton.emailValidation = 'success'\n        }\n        break\n      case 'message':\n        if (isEmpty(e.target.value)) {\n          validaton.messageValidation = 'error'\n        } else {\n          validaton.messageValidation = 'success'\n        }\n        break\n      default:\n        break\n    }\n    this.setState(prev => ({...prev, ...validaton, ...update}))\n  }\n\n  validateInputs () {\n    const { nameValidation, emailValidation, messageValidation } = this.state\n    return (nameValidation === 'success' && emailValidation === 'success' && messageValidation === 'success')\n  }\n\n  sendEmail () {\n    const {myEmail, name, email, message} = this.state\n    if (this.validateInputs()) {\n      const payload = {\n        from: 'Contact Me',\n        to: myEmail,\n        subject: `Msg from: ${email}`,\n        text: `Name: ${name}\\n\\nEmail: ${email}\\n\\nMessage: ${message}`\n      }\n      // Send Email\n      this.setState({isLoading: true})\n      fetch('https://us-central1-mailer-69581.cloudfunctions.net/mail/', {\n        method: 'POST',\n        body: JSON.stringify(payload),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.status === 200) {\n          response.json().then(data => {\n            this.setState({\n              isLoading: false,\n              email: '',\n              name: '',\n              message: ''\n            })\n            window.alert('Message Sent!')\n            console.log(data)\n          })\n        } else {\n          console.log(response)\n          throw new Error('Email send failed.')\n        }\n      }).catch(() => {\n        window.alert('Failed to send message. Please try sending me an email instead.')\n        this.setState({isLoading: false})\n      })\n    } else {\n      const validations = {}\n      if (isEmpty(name)) {\n        validations.nameValidation = 'error'\n      }\n      if (!isEmail(email)) {\n        validations.emailValidation = 'error'\n      }\n      if (isEmpty(message)) {\n        validations.messageValidation = 'error'\n      }\n      this.setState(prev => ({...prev, ...validations}))\n    }\n  }\n\n  render () {\n    const { isLoading, nameValidation, emailValidation, messageValidation } = this.state\n    return (\n      <React.Fragment>\n        <section className='row contact' id='contact'>\n          <div className='col-md-12 title'>\n            <h2>\n              <Glyphicon glyph='envelope' /> / Contact\n            </h2>\n          </div>\n          <div className='col-md-12'>\n            <div className='content'>\n              <div className='inner-title'>\n                <h3>get in touch with me</h3>\n                <p>Let me now if you're interested in working with me.</p>\n              </div>\n              {/* <div className='inner-content contact-holder'> */}\n              <div className='inner-content '>\n                <div className='address'>\n                  <Form horizontal>\n                    {/* Name */}\n                    <FormGroup\n                      controlId='formHorizontalname'\n                      validationState={nameValidation}\n                    >\n                      <ControlLabel>Name</ControlLabel>\n                      <FormControl\n                        type='text'\n                        placeholder='Your Name'\n                        name='name'\n                        value={this.state.name}\n                        onChange={this.handleUserInput}\n                      />\n                    </FormGroup>\n                    {/* Email */}\n                    <FormGroup\n                      controlId='formHorizontalEmail'\n                      validationState={emailValidation}\n                    >\n                      <ControlLabel>Email</ControlLabel>\n                      <FormControl\n                        type='email'\n                        placeholder='Email'\n                        name='email'\n                        value={this.state.email}\n                        onChange={this.handleUserInput}\n                      />\n                    </FormGroup>\n                    {/* Message */}\n                    <FormGroup\n                      controlId='formHorizontalMessage'\n                      validationState={messageValidation}\n                    >\n                      <ControlLabel>Message</ControlLabel>\n                      <FormControl\n                        componentClass='textarea'\n                        rows={4}\n                        placeholder='Message'\n                        name='message'\n                        value={this.state.message}\n                        onChange={this.handleUserInput}\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Button\n                        className='btnSend'\n                        disabled={isLoading}\n                        onClick={!isLoading ? this.sendEmail : null}\n                      >\n                        {isLoading ? 'Sending email....' : 'Send'}\n                      </Button>\n                    </FormGroup>\n                  </Form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </React.Fragment>\n    )\n  }\n}\n\nContact.propTypes = {\n  email: PropTypes.string.isRequired\n}\n\nexport default Contact\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './styles.css'\n\nclass Footer extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      quote: props.quote\n    }\n  }\n\n  componentWillReceiveProps (props) {\n    this.setState({quote: props.quote})\n  }\n\n  render () {\n    const { quote, author } = this.state.quote\n    return (\n      <footer className='footer'>\n        <div className='quotes'>\n          <div className='quote-body'>\n            <blockquote> {quote} </blockquote>\n          </div>\n          <div className='quote-by'> - {author} </div>\n        </div>\n      </footer>\n    )\n  }\n}\n\nFooter.propTypes = {\n  quote: PropTypes.object.isRequired\n}\n\nexport default Footer\n","import fetch from 'isomorphic-fetch'\nimport React, { Component } from 'react'\nimport ReactGA from 'react-ga'\n\nimport Dashboard from '../DashboardV2'\nimport About from '../About'\nimport Resume from '../Resume'\nimport Interests from '../Interests'\nimport Contact from '../Contact'\nimport Footer from '../Common/Footer'\n\nimport resumeData from '../../data/resume.json'\n\nimport { quotesAPI, booksAPI } from './URLs'\n\nimport './index.css'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      resumeData: {},\n      quote: {\n        quote: 'People who are really serious about software should make their own hardware',\n        author: 'Alan Kay'\n      }\n    }\n\n    ReactGA.initialize('UA-76263604-1', { testMode: process.env.NODE_ENV === 'test' })\n    ReactGA.pageview(window.location.pathname + window.location.search)\n  }\n\n  getQuote () {\n    return fetch(quotesAPI)\n      .then(response => response.json())\n  }\n\n  getBooks () {\n    return fetch(booksAPI).then(response => response.json())\n  }\n\n  componentDidMount () {\n    this.getQuote()\n      .then(quote => {\n        this.setState({ quote })\n      })\n      .catch(err => console.log(err))\n  }\n\n  render () {\n    const {basics, education, work, interests, certifications} = resumeData\n    const { quote } = this.state\n    return (\n      <div className='App'>\n        {/* <Dashboard name={basics.name} quote={quote} /> */}\n        <Dashboard name={basics.name} />\n        <About data={basics} />\n        <Resume education={education} work={work} certifications={certifications} />\n        <Interests data={interests} />        \n        <Contact email={basics.email} />        \n        <Footer quote={quote} />        \n      </div>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\nimport fetch from 'isomorphic-fetch'\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n// import 'bootstrap/dist/css/bootstrap-theme.min.css'\n// import './index.css'\nimport App from './containers/App'\nimport { unregister } from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nunregister()\n","\nexports.quotesAPI = 'https://ptdwwoy2xc.execute-api.us-east-1.amazonaws.com/prod/quotes/random'\n\nexports.booksAPI = 'https://vqjx1jvwl3.execute-api.us-east-1.amazonaws.com/default/cgrb-api'\n"],"sourceRoot":""}